{"version":3,"sources":["time-stamp.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;AACA,IAAM,QAAQ,sBAAR;;kBAES,UAAC,KAAD,EAAyB;MAAjB,gEAAU,kBAAO;;;AAEtC,QAAM,8BAAN,EAAsC,MAAM,SAAN,CAAtC,CAFsC;;AAItC,YAAU,SAAc;AACtB,eAAW,WAAX;AACA,eAAW,WAAX;AACA,cAAU,IAAV;AACA,8BAA0B,KAA1B;GAJQ,EAKP,OALO,CAAV,CAJsC;;AAWtC,QAAM,SAAN,EAAiB,OAAjB,EAXsC;;AAatC,QAAM,+BAAN,EAAuC,MAAM,QAAN,CAAe,cAAf,CAAvC,CAbsC;AActC,MAAI,QAAQ,wBAAR,EAAkC;AACpC,UAAM,QAAN,CAAe,cAAf,GAAgC,KAAhC,CADoC;AAEpC,YAAQ,IAAR,CAAa,mDAAb,EAAkE,MAAM,eAAN,CAAlE,CAFoC;GAAtC,MAGO;;;AAGL,QAAI,MAAM,QAAN,CAAe,IAAf,IAAuB,gBAAvB,EAAyC;;AAE3C,UAAI;AACF,cAAM,MAAN,CAAa,EAAE,IAAI,IAAJ,EAAf,EAA2B,UAAS,GAAT,EAAc,MAAd,EAAsB;;SAAtB,CAA3B,CADE;OAAJ,CAIE,OAAO,GAAP,EAAY;AACZ,YAAI,MAAM,QAAN,CAAe,cAAf,IAAiC,QAAQ,QAAR,EAAkB;AACrD,kBAAQ,IAAR,CAAa,6FACA,qFADA,CAAb,CADqD;SAAvD;OADA;KANJ;GANF;;AAqBA,QAAM,QAAN,CAAe,cAAf,GAAgC,KAAhC,CAnCsC;;AAqCtC,QAAM,cAAN,CAAqB,QAAQ,SAAR,EAAmB,EAAC,MAAM,IAAN,EAAY,UAAU,QAAQ,QAAR,EAAkB,WAAW,KAAX,EAAjF,EArCsC;AAsCtC,QAAM,cAAN,CAAqB,QAAQ,SAAR,EAAmB,EAAC,MAAM,IAAN,EAAY,UAAU,QAAQ,QAAR,EAA/D,EAtCsC;;AAwCtC,QAAM,OAAN,CAAc,aAAd,EAA6B,UAAC,GAAD,EAAM,IAAN,EAAe;AAC1C,UAAM,aAAN,EAAqB,IAAI,OAAJ,CAArB,CAD0C;AAE1C,QAAI,IAAI,OAAJ,IAAe,IAAI,OAAJ,CAAY,aAAZ,EAA2B;AAAE,aAAO,MAAP,CAAF;KAA9C;AACA,QAAI,IAAI,QAAJ,EAAc;AAChB,YAAM,uBAAN,EAA+B,IAAI,KAAJ,CAAU,SAAV,EAAqB,QAAQ,SAAR,EAAmB,IAAI,QAAJ,CAAa,EAAb,CAAvE,CADgB;AAEhB,UAAI,QAAJ,CAAa,QAAQ,SAAR,CAAb,GAAkC,IAAI,IAAJ,EAAlC,CAFgB;KAAlB,MAGO;AACL,YAAM,iCAAN,EAAyC,IAAI,KAAJ,CAAU,eAAV,EAA2B,QAAQ,SAAR,EAAmB,IAAI,KAAJ,CAAvF,CADK;AAEL,YAAM,qBAAN,EAA6B,IAAI,eAAJ,EAAqB,IAAI,eAAJ,CAAoB,QAAQ,SAAR,CAAtE,EAFK;AAGL,UAAI,IAAI,eAAJ,IAAuB,IAAI,eAAJ,CAAoB,QAAQ,SAAR,CAA3C,EAA+D;AACjE,cAAM,wCAAN,EAAgD,QAAQ,SAAR,EAAmB,IAAI,eAAJ,CAAoB,QAAQ,SAAR,CAAvF,EADiE;AAEjE,YAAI,IAAJ,CAAS,QAAQ,SAAR,CAAT,GAA8B,IAAI,eAAJ,CAAoB,QAAQ,SAAR,CAAlD,CAFiE;OAAnE,MAGO;AACL,YAAI,IAAJ,CAAS,QAAQ,SAAR,CAAT,GAA8B,IAAI,IAAJ,EAA9B,CADK;OAHP;;AAOA,UAAI,IAAJ,CAAS,QAAQ,SAAR,CAAT,GAA8B,IAAI,IAAJ,EAA9B,CAVK;KAHP;AAeA,WAlB0C;GAAf,CAA7B,CAxCsC;CAAzB;;AA+Df,OAAO,OAAP,GAAiB,QAAQ,OAAR","file":"time-stamp.js","sourcesContent":["import _debug from './debug';\nconst debug = _debug();\n\nexport default (Model, options = {}) => {\n\n  debug('TimeStamp mixin for Model %s', Model.modelName);\n\n  options = Object.assign({\n    createdAt: 'createdAt',\n    updatedAt: 'updatedAt',\n    required: true,\n    disableAllValidateUpsert: false\n  }, options);\n\n  debug('options', options);\n\n  debug('Model.settings.validateUpsert', Model.settings.validateUpsert);\n  if (options.disableAllValidateUpsert) {\n    Model.settings.validateUpsert = false;\n    console.warn('%s.settings.validateUpsert was overriden to false', Model.pluralModelName);\n  } else {\n\n    // Check base model\n    if (Model.settings.base != 'PersistedModel') {\n      // Check for PersistedModel static method\n      try {\n        Model.exists({ id: null }, function(err, exists) {\n          // Continue normally\n        });\n      } catch (err) {\n        if (Model.settings.validateUpsert && options.required) {\n          console.warn('TimeStamp mixin requires validateUpsert be false in models not based on PersistedModel, ' +\n                       'override with disableAllValidateUpsert. See @clarkbw/loopback-ds-timestamp-mixin#10');\n        }\n      }\n    }\n  }\n\n  Model.settings.validateUpsert = false;\n\n  Model.defineProperty(options.createdAt, {type: Date, required: options.required, defaultFn: 'now'});\n  Model.defineProperty(options.updatedAt, {type: Date, required: options.required});\n\n  Model.observe('before save', (ctx, next) => {\n    debug('ctx.options', ctx.options);\n    if (ctx.options && ctx.options.skipUpdatedAt) { return next(); }\n    if (ctx.instance) {\n      debug('%s.%s before save: %s', ctx.Model.modelName, options.updatedAt, ctx.instance.id);\n      ctx.instance[options.updatedAt] = new Date();\n    } else {\n      debug('%s.%s before update matching %j', ctx.Model.pluralModelName, options.updatedAt, ctx.where);\n      debug('ctx.currentInstance', ctx.currentInstance, ctx.currentInstance[options.createdAt]);\n      if (ctx.currentInstance && ctx.currentInstance[options.createdAt]) {\n        debug('currentInstance.%s timestamp reused %d', options.createdAt, ctx.currentInstance[options.createdAt]);\n        ctx.data[options.createdAt] = ctx.currentInstance[options.createdAt];\n      } else {\n        ctx.data[options.createdAt] = new Date();\n      }\n\n      ctx.data[options.updatedAt] = new Date();\n    }\n    next();\n  });\n\n};\n\nmodule.exports = exports.default;\n"],"sourceRoot":"/Users/clarkbw/src/pi/loopback-ds-timestamp-mixin/es6"}